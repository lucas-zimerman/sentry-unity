name: CI

on:
  push:
    branches:
      - main
      - release/**

  pull_request:

jobs:
    
  build:
    name: Unity ${{matrix.testt}}
    runs-on: macos-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_NOLOGO: 1
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        testt: [ "14.1", "14.2", "14.3"]
        api-level: [21, 25, 30]
         

    steps:
      # Tag: 0.9.1
      - name: Kill emulator if AVD failed.
        if: ${{ steps.smoke-test.outputs.smoke-status != 'Completed' }}
        shell: pwsh
        run: |
          Write-Host "Smoke test failed with status ${{ steps.smoke-test.outputs.smoke-status }}, closing simulator."
          Start-Process -FilePath "adb" -ArgumentList "emu", "kill"
          sleep 7
      
      - name: Select AVD target
        id: select-avd-target
        shell: pwsh
        run: |
          $avdTarget = "default"
          If (${{ matrix.api-level }} -eq 30)
          {
            $avdTarget = "google_apis"
          }
          Write-Host "steps.select-avd-target.outputs.target is $avdTarget" 
          echo "::set-output name=target::$avdTarget"

      - name: Select AVD target 2
        shell: pwsh
        run: |
          Write-Output "Target Value is  ${{ steps.select-avd-target.outputs.target }} OR ${{ steps.select-avd-target.target }} OR ${{ steps.select-avd-target.outputs.target.value }}"
          Throw "test"
      
      - name: Install xcode-installer
        shell: pwsh
        run: gem install xcode-install

      - name: Install iOS ${{ matrix.testt}} runtime
        shell: pwsh
        run: xcversion simulators --install='iOS ${{ matrix.testt }}'

      - name: Create simulator
        shell: pwsh
        run: xcrun simctl create derp "iPhone 8" "iOS${{ matrix.testt }}"

      - name: Get list of devices
        shell: pwsh
        run: xcrun simctl list devices

      - name: Test2
        shell: pwsh
        run: |
          xcrun simctl list devices
        
      - name: Preparing test app for smoke test.
        uses: actions/upload-artifact@v2
        with:
          name: droid-testapp-aa
          path: scripts/app.apk
